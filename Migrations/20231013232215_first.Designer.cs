// <auto-generated />
using System;
using Avaliacoes.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Avaliacoes.Migrations
{
    [DbContext(typeof(AvaliacaoDbContext))]
    [Migration("20231013232215_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("Avaliacoes.Domain.Avaliacao", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Acoes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Avaliador")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bondes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Contencao")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataFull")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataMeio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DattaPP")
                        .HasColumnType("TEXT");

                    b.Property<int>("Dedicacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DivisaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estudos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Financeiro")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Frequencia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Grau")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Operacional")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pubs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AvaliacaoId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Avaliacoes.Domain.Divisao", b =>
                {
                    b.Property<int>("DivisaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("DivisaoId");

                    b.ToTable("Divisao");
                });

            modelBuilder.Entity("Avaliacoes.Domain.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DivisaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.HasIndex("DivisaoId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Avaliacoes.Domain.Avaliacao", b =>
                {
                    b.HasOne("Avaliacoes.Domain.Usuario", "Usuario")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Avaliacoes.Domain.Usuario", b =>
                {
                    b.HasOne("Avaliacoes.Domain.Divisao", "Divisao")
                        .WithMany("Usuarios")
                        .HasForeignKey("DivisaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Divisao");
                });

            modelBuilder.Entity("Avaliacoes.Domain.Divisao", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Avaliacoes.Domain.Usuario", b =>
                {
                    b.Navigation("Avaliacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
